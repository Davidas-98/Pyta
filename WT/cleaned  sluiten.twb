<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook original-version='18.1' source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='DuurSluiten' inline='true' name='federated.1p8ugip157ewau18i2aaq0yy8rmx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DuurSluiten' name='textscan.0fxsn3u0nh9nkw1dgrn2802yuym7'>
            <connection class='textscan' directory='D:/Code/Notebooks/Bruggen' filename='DuurSluiten.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0fxsn3u0nh9nkw1dgrn2802yuym7' name='DuurSluiten.csv' table='[DuurSluiten#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='nl_NL'>
            <column datatype='string' name=',duur,beweging,time,WR,Wk,uur,WRbin,WKbin' ordinal='0' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DuurSluiten.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;nl_NL&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;nl_NL&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>,duur,beweging,time,WR,Wk,uur,WRbin,WKbin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]</local-name>
            <parent-name>[DuurSluiten.csv]</parent-name>
            <remote-alias>,duur,beweging,time,WR,Wk,uur,WRbin,WKbin</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='index' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 1 ) ))' />
      </column>
      <column caption='duur' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 2 ) ))' />
      </column>
      <column caption='sluiten' datatype='string' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 3 ) )' />
      </column>
      <column caption='timestamp' datatype='datetime' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4]' role='dimension' type='ordinal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
        <calculation class='tableau' formula='DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss.SSS&quot;, TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 4 ) ) ) ' />
      </column>
      <column caption='WR' datatype='real' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 5]' role='dimension' type='ordinal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
        <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 5 ) ))' />
      </column>
      <column caption='WK' datatype='real' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 6]' role='dimension' type='ordinal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
        <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 6 ) ))' />
      </column>
      <column caption='uur' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 7]' role='dimension' type='ordinal' user:SplitFieldIndex='7' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 7 ) ))' />
      </column>
      <column caption='WRbin' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 8]' role='dimension' type='ordinal' user:SplitFieldIndex='8' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 8 ) ))' />
      </column>
      <column caption='Wkbin' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 9]' role='dimension' type='ordinal' user:SplitFieldIndex='9' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 9 ) ))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.622251' measure-ordering='alphabetic' measure-percentage='0.377749' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Netherlands&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Open' inline='true' name='federated.0oclbpy03rptx012yta880a4f2un' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Open' name='textscan.0ltu6if0s1hwi41dq4t0i1lroltp'>
            <connection class='textscan' directory='D:/Code/Notebooks/Bruggen' filename='Open.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ltu6if0s1hwi41dq4t0i1lroltp' name='Open.csv' table='[Open#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='nl_NL'>
            <column datatype='string' name=',duur,beweging,time,WR,Wk,WRbin,WKbin' ordinal='0' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Open.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;nl_NL&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;nl_NL&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>,duur,beweging,time,WR,Wk,WRbin,WKbin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[,duur,beweging,time,WR,Wk,WRbin,WKbin]</local-name>
            <parent-name>[Open.csv]</parent-name>
            <remote-alias>,duur,beweging,time,WR,Wk,WRbin,WKbin</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption=',duur,beweging,time,WR,Wk,WRbin,WKbin - Split 1' datatype='string' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='duur' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 2 ) ))' />
      </column>
      <column caption=',duur,beweging,time,WR,Wk,WRbin,WKbin - Split 3' datatype='string' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 3 ) )' />
      </column>
      <column caption='timestamp' datatype='datetime' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4]' role='dimension' type='ordinal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
        <calculation class='tableau' formula='DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss.SSS&quot;, TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 4 ) ) ) ' />
      </column>
      <column caption=',duur,beweging,time,WR,Wk,WRbin,WKbin - Split 5' datatype='string' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 5]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 5 ) )' />
      </column>
      <column caption=',duur,beweging,time,WR,Wk,WRbin,WKbin - Split 6' datatype='string' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 6 ) )' />
      </column>
      <column caption='wrbin' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7]' role='dimension' type='ordinal' user:SplitFieldIndex='7' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 7 ) ))' />
        <aliases>
          <alias key='0' value='N' />
          <alias key='1' value='NO' />
          <alias key='2' value='O' />
          <alias key='3' value='ZO' />
          <alias key='4' value='Z' />
          <alias key='5' value='ZW' />
          <alias key='6' value='W' />
          <alias key='7' value='NW' />
        </aliases>
      </column>
      <column caption='wkbin' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 8]' role='dimension' type='ordinal' user:SplitFieldIndex='8' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 8 ) ))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.594203' measure-ordering='alphabetic' measure-percentage='0.405797' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7:ok]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>4</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>0</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>5</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>1</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>2</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>3</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>6</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>7</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Netherlands&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='WKbin kleur'>
      <table>
        <view>
          <datasources>
            <datasource caption='DuurSluiten' name='federated.1p8ugip157ewau18i2aaq0yy8rmx' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8ugip157ewau18i2aaq0yy8rmx'>
            <column caption='duur' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='timestamp' datatype='datetime' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4]' role='dimension' type='ordinal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
              <calculation class='tableau' formula='DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss.SSS&quot;, TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 4 ) ) ) ' />
            </column>
            <column caption='Wkbin' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 9]' role='dimension' type='ordinal' user:SplitFieldIndex='9' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 9 ) ))' />
            </column>
            <column datatype='string' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]' role='dimension' type='nominal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 9]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 9:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4]' derivation='Quarter' name='[qr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4]' derivation='Year' name='[yr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <natural-sort column='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2:ok]' direction='DESC' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 9:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2:ok]</rows>
        <cols>(([federated.1p8ugip157ewau18i2aaq0yy8rmx].[yr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok] / [federated.1p8ugip157ewau18i2aaq0yy8rmx].[qr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok]) * [federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:qk])</cols>
      </table>
      <simple-id uuid='{FE9CB93A-EB68-4EF2-8929-9D26727569CE}' />
    </worksheet>
    <worksheet name='WRBin kleur'>
      <table>
        <view>
          <datasources>
            <datasource caption='DuurSluiten' name='federated.1p8ugip157ewau18i2aaq0yy8rmx' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8ugip157ewau18i2aaq0yy8rmx'>
            <column caption='duur' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='timestamp' datatype='datetime' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4]' role='dimension' type='ordinal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
              <calculation class='tableau' formula='DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss.SSS&quot;, TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 4 ) ) ) ' />
            </column>
            <column caption='WRbin' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 8]' role='dimension' type='ordinal' user:SplitFieldIndex='8' user:SplitFieldOrigin='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,uur,WRbin,WKbin], &quot;,&quot;, 8 ) ))' />
            </column>
            <column datatype='string' name='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin]' role='dimension' type='nominal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 8]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 8:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4]' derivation='Quarter' name='[qr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4]' derivation='Year' name='[yr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <natural-sort column='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2:ok]' direction='DESC' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 8:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2:ok]</rows>
        <cols>(([federated.1p8ugip157ewau18i2aaq0yy8rmx].[yr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok] / [federated.1p8ugip157ewau18i2aaq0yy8rmx].[qr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok]) * [federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:qk])</cols>
      </table>
      <simple-id uuid='{21D6A159-078C-4569-9D9C-CA44044C01E7}' />
    </worksheet>
    <worksheet name='uncleaned WK'>
      <table>
        <view>
          <datasources>
            <datasource caption='Open' name='federated.0oclbpy03rptx012yta880a4f2un' />
          </datasources>
          <datasource-dependencies datasource='federated.0oclbpy03rptx012yta880a4f2un'>
            <column caption='duur' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='timestamp' datatype='datetime' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4]' role='dimension' type='ordinal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
              <calculation class='tableau' formula='DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss.SSS&quot;, TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 4 ) ) ) ' />
            </column>
            <column caption='wkbin' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 8]' role='dimension' type='ordinal' user:SplitFieldIndex='8' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 8 ) ))' />
            </column>
            <column datatype='string' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin]' role='dimension' type='nominal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 8]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 8:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4]' derivation='Quarter' name='[qr:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4]' derivation='Year' name='[yr:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <natural-sort column='[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2:ok]' direction='DESC' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 8:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2:ok]</rows>
        <cols>(([federated.0oclbpy03rptx012yta880a4f2un].[yr:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:ok] / [federated.0oclbpy03rptx012yta880a4f2un].[qr:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:ok]) * [federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:qk])</cols>
      </table>
      <simple-id uuid='{49E9BCA1-71F1-4AE6-AA73-65B1E1D799E2}' />
    </worksheet>
    <worksheet name='uncleaned WR'>
      <table>
        <view>
          <datasources>
            <datasource caption='Open' name='federated.0oclbpy03rptx012yta880a4f2un' />
          </datasources>
          <datasource-dependencies datasource='federated.0oclbpy03rptx012yta880a4f2un'>
            <column caption='duur' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='timestamp' datatype='datetime' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4]' role='dimension' type='ordinal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
              <calculation class='tableau' formula='DATEPARSE ( &quot;yyyy-MM-dd HH:mm:ss.SSS&quot;, TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 4 ) ) ) ' />
            </column>
            <column caption='wrbin' datatype='integer' datatype-customized='true' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7]' role='dimension' type='ordinal' user:SplitFieldIndex='7' user:SplitFieldOrigin='[federated.0oclbpy03rptx012yta880a4f2un].[,duur,beweging,time,WR,Wk,WRbin,WKbin]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [,duur,beweging,time,WR,Wk,WRbin,WKbin], &quot;,&quot;, 7 ) ))' />
              <aliases>
                <alias key='0' value='N' />
                <alias key='1' value='NO' />
                <alias key='2' value='O' />
                <alias key='3' value='ZO' />
                <alias key='4' value='Z' />
                <alias key='5' value='ZW' />
                <alias key='6' value='W' />
                <alias key='7' value='NW' />
              </aliases>
            </column>
            <column datatype='string' name='[,duur,beweging,time,WR,Wk,WRbin,WKbin]' role='dimension' type='nominal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7]' derivation='None' name='[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4]' derivation='Quarter' name='[qr:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4]' derivation='Year' name='[yr:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <natural-sort column='[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2:ok]' direction='DESC' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2:ok]</rows>
        <cols>(([federated.0oclbpy03rptx012yta880a4f2un].[yr:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:ok] / [federated.0oclbpy03rptx012yta880a4f2un].[qr:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:ok]) * [federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:qk])</cols>
      </table>
      <simple-id uuid='{8D5083BA-13DC-493C-9314-B9115C73136C}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='WRBin kleur'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 8:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2:ok]</field>
            <field>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 8:ok]</field>
            <field>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 9:ok]</field>
            <field>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[yr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{264EDBE8-A467-4DF5-B492-CE3F61C65266}' />
    </window>
    <window class='worksheet' maximized='true' name='WKbin kleur'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 9:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 2:ok]</field>
            <field>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 8:ok]</field>
            <field>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[none:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 9:ok]</field>
            <field>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[yr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CCE9A06-3F5B-49CC-845E-D1A48AB301EC}' />
    </window>
    <window class='worksheet' name='uncleaned WK'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 8:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk - Split 2:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk - Split 5:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk - Split 6:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 8:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[yr:,duur,beweging,time,WR,Wk - Split 4:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[yr:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:ok]</field>
            <field>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[yr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32E7E92F-9493-47B2-AED7-4810AC70562E}' />
    </window>
    <window class='worksheet' name='uncleaned WR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight field='[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7:ok]'>
          <color-one-way>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk - Split 2:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk - Split 5:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk - Split 6:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 2:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 7:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[none:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 8:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[yr:,duur,beweging,time,WR,Wk - Split 4:ok]</field>
            <field>[federated.0oclbpy03rptx012yta880a4f2un].[yr:,duur,beweging,time,WR,Wk,WRbin,WKbin - Split 4:ok]</field>
            <field>[federated.1p8ugip157ewau18i2aaq0yy8rmx].[yr:,duur,beweging,time,WR,Wk,uur,WRbin,WKbin - Split 4:ok]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>0</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26C38ADF-197D-4799-A838-0AD40E07EF00}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='WKbin kleur' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WRBin kleur' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='uncleaned WK' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='uncleaned WR' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
